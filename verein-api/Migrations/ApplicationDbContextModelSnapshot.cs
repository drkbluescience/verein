// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VereinsApi.Data;

#nullable disable

namespace VereinsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Verein")
                .HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("VereinsApi.Domain.Entities.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<int?>("AdresseTypId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AdresseTypId");

                    b.Property<string>("Adresszusatz")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Adresszusatz");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<string>("Bundesland")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bundesland");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeletedFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("DeletedFlag");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMail");

                    b.Property<string>("Faxnummer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Faxnummer");

                    b.Property<DateTime?>("GueltigBis")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigBis");

                    b.Property<DateTime?>("GueltigVon")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigVon");

                    b.Property<string>("Hausnummer")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Hausnummer");

                    b.Property<string>("Hinweis")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Hinweis");

                    b.Property<bool?>("IstStandard")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IstStandard");

                    b.Property<string>("Kontaktperson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kontaktperson");

                    b.Property<string>("Land")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Deutschland")
                        .HasColumnName("Land");

                    b.Property<double?>("Latitude")
                        .HasColumnType("decimal(10,8)")
                        .HasColumnName("Latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("decimal(11,8)")
                        .HasColumnName("Longitude");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ort")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Ort");

                    b.Property<string>("PLZ")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLZ");

                    b.Property<string>("Postfach")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Postfach");

                    b.Property<string>("Stadtteil")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Stadtteil");

                    b.Property<string>("Strasse")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Strasse");

                    b.Property<string>("Telefonnummer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefonnummer");

                    b.Property<int?>("VereinId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VereinId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_Adresse_DeletedFlag");

                    b.HasIndex("Ort")
                        .HasDatabaseName("IX_Adresse_Ort");

                    b.HasIndex("PLZ")
                        .HasDatabaseName("IX_Adresse_PLZ");

                    b.HasIndex("VereinId")
                        .HasDatabaseName("IX_Adresse_VereinId");

                    b.HasIndex("VereinId1");

                    b.ToTable("Adresse", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Bankkonto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<string>("BIC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BIC");

                    b.Property<string>("BLZ")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("BLZ");

                    b.Property<string>("Bankname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Bankname");

                    b.Property<string>("Beschreibung")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Beschreibung");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeletedFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("DeletedFlag");

                    b.Property<DateTime?>("GueltigBis")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigBis");

                    b.Property<DateTime?>("GueltigVon")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigVon");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)")
                        .HasColumnName("IBAN");

                    b.Property<bool?>("IstStandard")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IstStandard");

                    b.Property<string>("KontoNr")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("KontoNr");

                    b.Property<string>("Kontoinhaber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kontoinhaber");

                    b.Property<int?>("KontotypId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("KontotypId");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VereinId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VereinId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_Bankkonto_DeletedFlag");

                    b.HasIndex("IBAN")
                        .IsUnique()
                        .HasDatabaseName("IX_Bankkonto_IBAN");

                    b.HasIndex("IstStandard")
                        .HasDatabaseName("IX_Bankkonto_IstStandard");

                    b.HasIndex("VereinId")
                        .HasDatabaseName("IX_Bankkonto_VereinId");

                    b.HasIndex("VereinId1");

                    b.ToTable("Bankkonto", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Mitglied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<bool?>("Aktiv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasColumnName("Aktiv");

                    b.Property<DateTime?>("Austrittsdatum")
                        .HasColumnType("datetime")
                        .HasColumnName("Austrittsdatum");

                    b.Property<decimal?>("BeitragBetrag")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BeitragBetrag");

                    b.Property<bool?>("BeitragIstPflicht")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BeitragIstPflicht");

                    b.Property<string>("BeitragPeriodeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BeitragPeriodeCode");

                    b.Property<int?>("BeitragWaehrungId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BeitragWaehrungId");

                    b.Property<int?>("BeitragZahlungsTag")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BeitragZahlungsTag");

                    b.Property<string>("BeitragZahlungstagTypCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BeitragZahlungstagTypCode");

                    b.Property<string>("Bemerkung")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Bemerkung");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime")
                        .HasColumnName("Created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CreatedBy");

                    b.Property<bool?>("DeletedFlag")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeletedFlag");

                    b.Property<DateTime?>("Eintrittsdatum")
                        .HasColumnType("datetime")
                        .HasColumnName("Eintrittsdatum");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("Geburtsdatum")
                        .HasColumnType("datetime")
                        .HasColumnName("Geburtsdatum");

                    b.Property<string>("Geburtsort")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Geburtsort");

                    b.Property<int?>("GeschlechtId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GeschlechtId");

                    b.Property<int>("MitgliedStatusId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MitgliedStatusId");

                    b.Property<int>("MitgliedTypId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MitgliedTypId");

                    b.Property<string>("Mitgliedsnummer")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Mitgliedsnummer");

                    b.Property<string>("Mobiltelefon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Mobiltelefon");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nachname");

                    b.Property<int?>("StaatsangehoerigkeitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StaatsangehoerigkeitId");

                    b.Property<string>("Telefon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefon");

                    b.Property<int>("VereinId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("VereinId");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Vorname");

                    b.HasKey("Id");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_Mitglied_DeletedFlag");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Mitglied_Email");

                    b.HasIndex("MitgliedStatusId")
                        .HasDatabaseName("IX_Mitglied_MitgliedStatusId");

                    b.HasIndex("MitgliedTypId")
                        .HasDatabaseName("IX_Mitglied_MitgliedTypId");

                    b.HasIndex("Mitgliedsnummer")
                        .IsUnique()
                        .HasDatabaseName("IX_Mitglied_Mitgliedsnummer");

                    b.HasIndex("StaatsangehoerigkeitId")
                        .HasDatabaseName("IX_Mitglied_StaatsangehoerigkeitId");

                    b.HasIndex("VereinId")
                        .HasDatabaseName("IX_Mitglied_VereinId");

                    b.HasIndex("Nachname", "Vorname")
                        .HasDatabaseName("IX_Mitglied_Name");

                    b.ToTable("Mitglied", "Mitglied");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.MitgliedAdresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<int>("AdresseTypId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AdresseTypId");

                    b.Property<string>("Adresszusatz")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Adresszusatz");

                    b.Property<bool?>("Aktiv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasColumnName("Aktiv");

                    b.Property<string>("Bundesland")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bundesland");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime")
                        .HasColumnName("Created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CreatedBy");

                    b.Property<bool?>("DeletedFlag")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeletedFlag");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMail");

                    b.Property<DateTime?>("GueltigBis")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigBis");

                    b.Property<DateTime?>("GueltigVon")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigVon");

                    b.Property<string>("Hausnummer")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Hausnummer");

                    b.Property<string>("Hinweis")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Hinweis");

                    b.Property<bool?>("IstStandard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IstStandard");

                    b.Property<string>("Land")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Land");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("Latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("Longitude");

                    b.Property<int>("MitgliedId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MitgliedId");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Ort")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Ort");

                    b.Property<string>("PLZ")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLZ");

                    b.Property<string>("Postfach")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Postfach");

                    b.Property<string>("Stadtteil")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Stadtteil");

                    b.Property<string>("Strasse")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Strasse");

                    b.Property<string>("Telefonnummer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefonnummer");

                    b.HasKey("Id");

                    b.HasIndex("AdresseTypId")
                        .HasDatabaseName("IX_MitgliedAdresse_AdresseTypId");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_MitgliedAdresse_DeletedFlag");

                    b.HasIndex("IstStandard")
                        .HasDatabaseName("IX_MitgliedAdresse_IstStandard");

                    b.HasIndex("MitgliedId")
                        .HasDatabaseName("IX_MitgliedAdresse_MitgliedId");

                    b.HasIndex("Ort")
                        .HasDatabaseName("IX_MitgliedAdresse_Ort");

                    b.HasIndex("PLZ")
                        .HasDatabaseName("IX_MitgliedAdresse_PLZ");

                    b.HasIndex("MitgliedId", "IstStandard")
                        .HasDatabaseName("IX_MitgliedAdresse_MitgliedId_IstStandard");

                    b.ToTable("MitgliedAdresse", "Mitglied");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.MitgliedFamilie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime")
                        .HasColumnName("Created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CreatedBy");

                    b.Property<bool?>("DeletedFlag")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DeletedFlag");

                    b.Property<int>("FamilienbeziehungTypId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FamilienbeziehungTypId");

                    b.Property<DateTime?>("GueltigBis")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigBis");

                    b.Property<DateTime?>("GueltigVon")
                        .HasColumnType("datetime")
                        .HasColumnName("GueltigVon");

                    b.Property<string>("Hinweis")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Hinweis");

                    b.Property<int>("MitgliedFamilieStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1)
                        .HasColumnName("MitgliedFamilieStatusId");

                    b.Property<int>("MitgliedId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MitgliedId");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ModifiedBy");

                    b.Property<int>("ParentMitgliedId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ParentMitgliedId");

                    b.Property<int>("VereinId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("VereinId");

                    b.HasKey("Id");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_MitgliedFamilie_DeletedFlag");

                    b.HasIndex("FamilienbeziehungTypId")
                        .HasDatabaseName("IX_MitgliedFamilie_FamilienbeziehungTypId");

                    b.HasIndex("MitgliedFamilieStatusId")
                        .HasDatabaseName("IX_MitgliedFamilie_MitgliedFamilieStatusId");

                    b.HasIndex("MitgliedId")
                        .HasDatabaseName("IX_MitgliedFamilie_MitgliedId");

                    b.HasIndex("ParentMitgliedId")
                        .HasDatabaseName("IX_MitgliedFamilie_ParentMitgliedId");

                    b.HasIndex("VereinId")
                        .HasDatabaseName("IX_MitgliedFamilie_VereinId");

                    b.HasIndex("VereinId", "MitgliedId", "ParentMitgliedId", "FamilienbeziehungTypId")
                        .IsUnique()
                        .HasDatabaseName("UQ_MitgliedFamilie");

                    b.ToTable("MitgliedFamilie", "Mitglied");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Veranstaltung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<bool>("AnmeldeErforderlich")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnmeldeErforderlich");

                    b.Property<string>("Beschreibung")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Beschreibung");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeletedFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("DeletedFlag");

                    b.Property<DateTime?>("Enddatum")
                        .HasColumnType("datetime")
                        .HasColumnName("Ende");

                    b.Property<int?>("MaxTeilnehmer")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MaxTeilnehmer");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NurFuerMitglieder")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NurFuerMitglieder");

                    b.Property<string>("Ort")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Ort");

                    b.Property<decimal?>("Preis")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Preis");

                    b.Property<DateTime>("Startdatum")
                        .HasColumnType("datetime")
                        .HasColumnName("Beginn");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Titel");

                    b.Property<int>("VereinId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VereinId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WaehrungId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WaehrungId");

                    b.HasKey("Id");

                    b.HasIndex("Aktiv")
                        .HasDatabaseName("IX_Veranstaltung_Aktiv");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_Veranstaltung_DeletedFlag");

                    b.HasIndex("Startdatum")
                        .HasDatabaseName("IX_Veranstaltung_Startdatum");

                    b.HasIndex("Titel")
                        .HasDatabaseName("IX_Veranstaltung_Titel");

                    b.HasIndex("VereinId")
                        .HasDatabaseName("IX_Veranstaltung_VereinId");

                    b.HasIndex("VereinId1");

                    b.ToTable("Veranstaltung", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.VeranstaltungAnmeldung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<string>("Bemerkung")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Bemerkung");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeletedFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("DeletedFlag");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<int?>("MitgliedId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MitgliedId");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<decimal?>("Preis")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Preis");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<string>("Telefon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefon");

                    b.Property<int>("VeranstaltungId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WaehrungId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WaehrungId");

                    b.Property<int?>("ZahlungStatusId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ZahlungStatusId");

                    b.HasKey("Id");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_VeranstaltungAnmeldung_DeletedFlag");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_VeranstaltungAnmeldung_Email");

                    b.HasIndex("MitgliedId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_VeranstaltungAnmeldung_Status");

                    b.HasIndex("VeranstaltungId")
                        .HasDatabaseName("IX_VeranstaltungAnmeldung_VeranstaltungId");

                    b.ToTable("VeranstaltungAnmeldung", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.VeranstaltungBild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<string>("BildPfad")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("BildPfad");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeletedFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("DeletedFlag");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reihenfolge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1)
                        .HasColumnName("Reihenfolge");

                    b.Property<string>("Titel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Titel");

                    b.Property<int>("VeranstaltungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_VeranstaltungBild_DeletedFlag");

                    b.HasIndex("Reihenfolge")
                        .HasDatabaseName("IX_VeranstaltungBild_Reihenfolge");

                    b.HasIndex("VeranstaltungId")
                        .HasDatabaseName("IX_VeranstaltungBild_VeranstaltungId");

                    b.ToTable("VeranstaltungBild", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Verein", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AdresseId");

                    b.Property<bool?>("Aktiv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Aktiv");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeletedFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("DeletedFlag");

                    b.Property<string>("EPostEmpfangAdresse")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EPostEmpfangAdresse");

                    b.Property<string>("ElektronischeSignaturKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ElektronischeSignaturKey");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("ExterneReferenzId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ExterneReferenzId");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Fax");

                    b.Property<string>("Geschaeftsfuehrer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Geschaeftsfuehrer");

                    b.Property<DateTime?>("Gruendungsdatum")
                        .HasColumnType("datetime")
                        .HasColumnName("Gruendungsdatum");

                    b.Property<int?>("HauptBankkontoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("HauptBankkontoId");

                    b.Property<string>("Kontaktperson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kontaktperson");

                    b.Property<string>("Kurzname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Kurzname");

                    b.Property<string>("LogoPfad")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LogoPfad");

                    b.Property<string>("Mandantencode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mandantencode");

                    b.Property<int?>("Mitgliederzahl")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Mitgliederzahl");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RechtsformId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RechtsformId");

                    b.Property<string>("SEPA_GlaeubigerID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SEPA_GlaeubigerID");

                    b.Property<string>("SatzungPfad")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SatzungPfad");

                    b.Property<string>("SocialMediaLinks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SocialMediaLinks");

                    b.Property<string>("Steuernummer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Steuernummer");

                    b.Property<string>("Telefon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefon");

                    b.Property<string>("UstIdNr")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UstIdNr");

                    b.Property<string>("Vereinsnummer")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Vereinsnummer");

                    b.Property<string>("VertreterEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VertreterEmail");

                    b.Property<string>("Vorstandsvorsitzender")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Vorstandsvorsitzender");

                    b.Property<string>("Webseite")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Webseite");

                    b.Property<string>("Zweck")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Zweck");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("DeletedFlag")
                        .HasDatabaseName("IX_Verein_DeletedFlag");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Verein_Email");

                    b.HasIndex("HauptBankkontoId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Verein_Name");

                    b.ToTable("Verein", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Adresse", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Verein", "Verein")
                        .WithMany()
                        .HasForeignKey("VereinId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VereinsApi.Domain.Entities.Verein", null)
                        .WithMany("Adressen")
                        .HasForeignKey("VereinId1");

                    b.Navigation("Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Bankkonto", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Verein", "Verein")
                        .WithMany()
                        .HasForeignKey("VereinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VereinsApi.Domain.Entities.Verein", null)
                        .WithMany("Bankkonten")
                        .HasForeignKey("VereinId1");

                    b.Navigation("Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Mitglied", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Verein", "Verein")
                        .WithMany("Mitglieder")
                        .HasForeignKey("VereinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Mitglied_Verein");

                    b.Navigation("Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.MitgliedAdresse", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Mitglied", "Mitglied")
                        .WithMany("MitgliedAdressen")
                        .HasForeignKey("MitgliedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MitgliedAdresse_Mitglied");

                    b.Navigation("Mitglied");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.MitgliedFamilie", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Mitglied", "Mitglied")
                        .WithMany("FamilienbeziehungenAlsKind")
                        .HasForeignKey("MitgliedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MitgliedFamilie_Mitglied");

                    b.HasOne("VereinsApi.Domain.Entities.Mitglied", "ParentMitglied")
                        .WithMany("FamilienbeziehungenAlsElternteil")
                        .HasForeignKey("ParentMitgliedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MitgliedFamilie_ParentMitglied");

                    b.HasOne("VereinsApi.Domain.Entities.Verein", "Verein")
                        .WithMany("MitgliedFamilien")
                        .HasForeignKey("VereinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MitgliedFamilie_Verein");

                    b.Navigation("Mitglied");

                    b.Navigation("ParentMitglied");

                    b.Navigation("Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Veranstaltung", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Verein", "Verein")
                        .WithMany()
                        .HasForeignKey("VereinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VereinsApi.Domain.Entities.Verein", null)
                        .WithMany("Veranstaltungen")
                        .HasForeignKey("VereinId1");

                    b.Navigation("Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.VeranstaltungAnmeldung", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Mitglied", "Mitglied")
                        .WithMany("VeranstaltungAnmeldungen")
                        .HasForeignKey("MitgliedId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VereinsApi.Domain.Entities.Veranstaltung", "Veranstaltung")
                        .WithMany("VeranstaltungAnmeldungen")
                        .HasForeignKey("VeranstaltungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mitglied");

                    b.Navigation("Veranstaltung");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.VeranstaltungBild", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Veranstaltung", "Veranstaltung")
                        .WithMany("VeranstaltungBilder")
                        .HasForeignKey("VeranstaltungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veranstaltung");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Verein", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Adresse", "HauptAdresse")
                        .WithMany("VereineAsMainAddress")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VereinsApi.Domain.Entities.Bankkonto", "HauptBankkonto")
                        .WithMany("VereineAsMainBankAccount")
                        .HasForeignKey("HauptBankkontoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HauptAdresse");

                    b.Navigation("HauptBankkonto");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Adresse", b =>
                {
                    b.Navigation("VereineAsMainAddress");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Bankkonto", b =>
                {
                    b.Navigation("VereineAsMainBankAccount");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Mitglied", b =>
                {
                    b.Navigation("FamilienbeziehungenAlsElternteil");

                    b.Navigation("FamilienbeziehungenAlsKind");

                    b.Navigation("MitgliedAdressen");

                    b.Navigation("VeranstaltungAnmeldungen");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Veranstaltung", b =>
                {
                    b.Navigation("VeranstaltungAnmeldungen");

                    b.Navigation("VeranstaltungBilder");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Verein", b =>
                {
                    b.Navigation("Adressen");

                    b.Navigation("Bankkonten");

                    b.Navigation("MitgliedFamilien");

                    b.Navigation("Mitglieder");

                    b.Navigation("Veranstaltungen");
                });
#pragma warning restore 612, 618
        }
    }
}
