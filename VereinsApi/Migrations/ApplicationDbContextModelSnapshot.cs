// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VereinsApi.Data;

#nullable disable

namespace VereinsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Verein")
                .HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("VereinsApi.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressType")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Deutschland");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressType")
                        .HasDatabaseName("IX_Address_AddressType");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_Address_City");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Address_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Address_IsDeleted");

                    b.HasIndex("PostalCode")
                        .HasDatabaseName("IX_Address_PostalCode");

                    b.HasIndex("IsActive", "IsDeleted")
                        .HasDatabaseName("IX_Address_IsActive_IsDeleted");

                    b.ToTable("Address", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.Property<string>("AssociationNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ChairmanName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EPostReceiveAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ElectronicSignatureKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExternalReferenceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("FoundingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int?>("LegalFormId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MainAddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainBankAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MemberCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RepresentativeEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SEPACreditorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SocialMediaLinks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StatutePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Association_AssociationNumber")
                        .HasFilter("[AssociationNumber] IS NOT NULL");

                    b.HasIndex("ClientCode")
                        .IsUnique()
                        .HasDatabaseName("IX_Association_ClientCode")
                        .HasFilter("[ClientCode] IS NOT NULL");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Association_Email");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Association_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Association_IsDeleted");

                    b.HasIndex("LegalFormId");

                    b.HasIndex("MainAddressId");

                    b.HasIndex("MainBankAccountId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Association_Name");

                    b.HasIndex("IsActive", "IsDeleted")
                        .HasDatabaseName("IX_Association_IsActive_IsDeleted");

                    b.ToTable("Association", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.AssociationMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssociationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId")
                        .HasDatabaseName("IX_AssociationMember_AssociationId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_AssociationMember_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_AssociationMember_IsDeleted");

                    b.HasIndex("MemberId")
                        .HasDatabaseName("IX_AssociationMember_MemberId");

                    b.HasIndex("Role")
                        .HasDatabaseName("IX_AssociationMember_Role");

                    b.HasIndex("AssociationId", "MemberId")
                        .IsUnique()
                        .HasDatabaseName("IX_AssociationMember_AssociationId_MemberId");

                    b.HasIndex("IsActive", "IsDeleted")
                        .HasDatabaseName("IX_AssociationMember_IsActive_IsDeleted");

                    b.ToTable("AssociationMember", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountHolder")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountType")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("BIC")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IBAN")
                        .HasMaxLength(34)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountType")
                        .HasDatabaseName("IX_BankAccount_AccountType");

                    b.HasIndex("BankName")
                        .HasDatabaseName("IX_BankAccount_BankName");

                    b.HasIndex("IBAN")
                        .IsUnique()
                        .HasDatabaseName("IX_BankAccount_IBAN")
                        .HasFilter("[IBAN] IS NOT NULL");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_BankAccount_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_BankAccount_IsDeleted");

                    b.HasIndex("IsActive", "IsDeleted")
                        .HasDatabaseName("IX_BankAccount_IsActive_IsDeleted");

                    b.ToTable("BankAccount", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.LegalForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_LegalForm_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_LegalForm_IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_LegalForm_Name");

                    b.HasIndex("ShortName")
                        .IsUnique()
                        .HasDatabaseName("IX_LegalForm_ShortName")
                        .HasFilter("[ShortName] IS NOT NULL");

                    b.HasIndex("IsActive", "IsDeleted")
                        .HasDatabaseName("IX_LegalForm_IsActive_IsDeleted");

                    b.ToTable("LegalForm", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MembershipType")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Active");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Member_Email");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Member_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Member_IsDeleted");

                    b.HasIndex("LastName")
                        .HasDatabaseName("IX_Member_LastName");

                    b.HasIndex("MemberNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Member_MemberNumber")
                        .HasFilter("[MemberNumber] IS NOT NULL");

                    b.HasIndex("IsActive", "IsDeleted")
                        .HasDatabaseName("IX_Member_IsActive_IsDeleted");

                    b.ToTable("Member", "Verein");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Association", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.LegalForm", "LegalForm")
                        .WithMany("Associations")
                        .HasForeignKey("LegalFormId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VereinsApi.Domain.Entities.Address", "MainAddress")
                        .WithMany("AssociationsAsMainAddress")
                        .HasForeignKey("MainAddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VereinsApi.Domain.Entities.BankAccount", "MainBankAccount")
                        .WithMany("AssociationsAsMainBankAccount")
                        .HasForeignKey("MainBankAccountId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("LegalForm");

                    b.Navigation("MainAddress");

                    b.Navigation("MainBankAccount");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.AssociationMember", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Association", "Association")
                        .WithMany("AssociationMembers")
                        .HasForeignKey("AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VereinsApi.Domain.Entities.Member", "Member")
                        .WithMany("AssociationMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Member", b =>
                {
                    b.HasOne("VereinsApi.Domain.Entities.Address", "Address")
                        .WithMany("Members")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Address", b =>
                {
                    b.Navigation("AssociationsAsMainAddress");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Association", b =>
                {
                    b.Navigation("AssociationMembers");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.BankAccount", b =>
                {
                    b.Navigation("AssociationsAsMainBankAccount");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.LegalForm", b =>
                {
                    b.Navigation("Associations");
                });

            modelBuilder.Entity("VereinsApi.Domain.Entities.Member", b =>
                {
                    b.Navigation("AssociationMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
